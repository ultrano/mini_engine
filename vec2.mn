
var struct = 
{
  type   : "vec2",
  new    : func(x, y) { var v = {x: ::float(x), y: ::float(y)}; ::setmeta(v, this); return v; },
  length : func() { return ::sqrt(x*x + y*y); },
  dot    : func() { return new(x*x, y*y); },
  add    : func(v) { return new(x+v.x, y+v.y);},
  sub    : func(v) { return new(x-v.x, y-v.y);},
  scale  : func(f) { x *= f; y *= f; },
  normalize: func() { var len = length(); x /= len; y /= len; },
  "->"   : this,
  "-<"   : func(k,v) {::print("there is no "+k);},
  "=="   : func(val) { return (x == val.x && y == val.y); },
  "+"    : add,
  "-"    : sub,
  "*"    : func(f) { var v = new(x*f,y*f); return v;},
  "/"    : func(f) { var v = new(x/f,y/f); return v;},
  "~"    : func() { ::print("vec2 finalized"); },
};

insert(struct.type, struct);